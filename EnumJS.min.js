/**github.com/ChuckTerryEnumJS,AGPL-3.0*/
class Enum{#a;#b;#c;#d;static from(){return new Enum(arguments)};static isEnum(a){return a instanceof Enum};constructor(){this.#d=Array.from(arguments||[true,false]);this.#a=this.#d[0];this.#b=false;this.#c=null};[Symbol.iterator](){return (function(a){let b=0;const c=function(){return ((b<a.length)?{value:this.#d[b++],done:false}:{done:true})};return {next:c}})(this.#d)};[Symbol.toPrimitive](a){return (a[0]==`s`)?this.#a.toString():(isNaN(this.#a))?this.#a:0};[Symbol.toStringTag](){return `Enum`};get length(){return this.#d.length};get state(){return this.getState()};set state(a){return this.setState(a)};getState(){return this.#a};getValidStates(){return this.#d};lock(a=false){this.#b=true;this.#c=Symbol(`a`);return (a)?true:this.#c};setState(a){if(this.#d.indexOf(a)<0)throw new RangeError(`Enum Invalid State`);if(this.#b){throw new TypeError(`Enum State Locked`)};return this.#a=a};unlock(a){if(!!this.#b)return;if(a!==this.#c){throw new TypeError(`Invalid Key to Unlock Enum!`)};this.#b=false;this.#c=null};
}
